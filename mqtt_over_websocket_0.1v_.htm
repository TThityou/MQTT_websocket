<!-- 
Author: Pradeep Singh
Date: 11th January 2017
Version: 1.0
Description: This is sample code for sending and receiving MQTT messages over WebSockets
Blog: https://iotbytes.wordpress.com/
-->
<!--
    "runtimeExecutable":"D:\\Program Files\\CB\\CentBrowser\\Application\\chrome.exe"
-->

<!DOCTYPE HTML>
<html>

<head>

    <!-- Latest compiled and minified Bootstrap CSS -->
    <!-- 最新编译和缩小的Bootstrap CSS https://getbootstrap.com/-->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

    <!-- Include JQuery library from CDN -->
    <!--  包括CDN的JQuery库 -->
    <!-- <script src="min.js"></script> -->
    <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>

    <!-- Include Paho JavaScript MQTT Client from CDN -->
    <!-- 包括CDN的Paho JavaScript MQTT客户端 -->
    <!-- <script src="mqttws.js" type="text/javascript"></script> -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.js" type="text/javascript"></script>




    <script type="text/javascript">
        //  Variables
        var WebSocket_MQTT_Broker_URL = "";
        var MQTT_Client_ID = "";
        var MQTT_Topic = "";
        var MQTT_Client = "";

        // 点击“连接”时执行函数
        function mqtt_Connect_with_Broker() {

            // Set variables
            WebSocket_MQTT_Broker_URL = document.getElementById("txt_MQTT_Broker_URL").value;
            MQTT_Client_ID = document.getElementById("txt_MQTT_Client_ID").value;

            // Create a MQTT Client nstance 
            MQTT_Client = new Paho.MQTT.Client(WebSocket_MQTT_Broker_URL, MQTT_Client_ID);

            // set callback handlers ---- 设置回调函数
            MQTT_Client.onConnectionLost = onConnectionLost;
            MQTT_Client.onMessageArrived = onMessageArrived;

            // 创建连接的回调函数
            MQTT_Client.connect({
                onSuccess: onConnect
            });

        }

        // called when the client connects
        function onConnect() {
            // Once a connection has been made, make a subscription and send a message.
            Set_New_Console_Msg("Connected with MQTT Broker; My name is :" + " \" " + document.getElementById("txt_MQTT_Client_ID").value + " \" ");
        }
        // Randomly generate Client ID
        function gen_MQTT_Client_ID() {
            document.getElementById("txt_MQTT_Client_ID").value = Math.floor(100000000000 + Math.random() * 900000000000);
        }

        // Subscribe to MQTT Topic
        function mqtt_Subscribe_to_Topic() {
            MQTT_Subscribe_Topic = document.getElementById("txt_MQTT_Subscribe_Topic").value;
            MQTT_Client.subscribe(MQTT_Subscribe_Topic);
            Set_New_Console_Msg("Subscribed to MQTT Topic: " + "\"" + MQTT_Subscribe_Topic + "\"");
        }

        // Send MQTT Message 
        function mqtt_Publish_Message() {
            message = new Paho.MQTT.Message(document.getElementById("txt_MQTT_Msg").value);
            message.destinationName = document.getElementById("txt_MQTT_Publish_Topic").value;
            MQTT_Client.send(message);
            Set_New_Console_Msg("Published " + "\"" + document.getElementById("txt_MQTT_Msg").value + "\"" + "to MQTT Topic: " + "\"" + document.getElementById("txt_MQTT_Publish_Topic").value + "\"");
        }



        // called when the client loses its connection
        // 当客户端失去连接时调用
        function onConnectionLost(responseObject) {
            if (responseObject.errorCode !== 0) {
                // Set_New_Console_Msg("Connection Lost with MQTT Broker. Error: " + "\"" + responseObject.errorMessage + "\"");
                Set_New_Console_Msg("Goodbye! --**--**-- " + document.getElementById("txt_MQTT_Client_ID").value);
            }
        }

        // Set MQTT Messages to TextArea
        function Set_New_Console_Msg(text) {
            document.getElementById("txtAr_Console").value = document.getElementById("txtAr_Console").value + get_Fromatted_Time().toString() + ":  " + text + "\n";
            document.getElementById("txtAr_Console").scrollTop = document.getElementById("txtAr_Console").scrollHeight;
        }
        // called when a message arrives
        // 消息到达时调用
        function onMessageArrived(message) {
            Set_New_Console_Msg("MQTT Message Recieved. " + " Message: " + "\"" + message.payloadString + "\"" + " MQTT Topic: " + "\"" + message.destinationName + "\"" + " QoS Value: " + "\"" + message.qos + "\"");
        }

        //Clear Console
        function clear_Console() {
            document.getElementById("txtAr_Console").value = "";
        }

        // Get Formatted time in Hour:Minute:Seconds AM/PM format
        // 获取时间，并用上下午显示出来
        function get_Fromatted_Time() {
            var dt = new Date();
            var hours = dt.getHours() == 0 ? "12" : dt.getHours() > 12 ? dt.getHours() - 12 : dt.getHours();
            var minutes = (dt.getMinutes() < 10 ? "0" : "") + dt.getMinutes();
            var seconds = dt.getSeconds();
            var ampm = dt.getHours() < 12 ? "AM" : "PM";
            var formattedTime = hours + ":" + minutes + ":" + seconds + " " + ampm;
            return formattedTime;
        }

        // Document Ready Event
        $(document).ready(function() {
            //Set default MQTT Broker WebSocket URL
            document.getElementById("txt_MQTT_Broker_URL").value = "ws://192.168.31.116:8083/mqtt";
            //Generate Random MQTT Clinet ID
            gen_MQTT_Client_ID();

        })
    </script>


</head>

<body>

    <hr>
    <form class="form-horizontal">
        <div class="form-group">
            <label for="txt_MQTT_Broker_URL" class="col-sm-2 control-label">WebSocket MQTT Broker URL:</label>
            <div class="col-sm-9">
                <input type="text" class="form-control" id="txt_MQTT_Broker_URL">
            </div>
        </div>
        <div class="form-group">
            <label for="txt_MQTT_Client_ID" class="col-sm-2 control-label">MQTT Client ID:</label>
            <div class="col-sm-6">
                <input type="text" class="form-control" id="txt_MQTT_Client_ID">
            </div>
            <div class="col-sm-4">
                <button type="button" class="btn btn-success col-sm-4" id="btn_Connect_to_Broker" onclick="mqtt_Connect_with_Broker();">Connect</button>
            </div>
        </div>
        <hr>
        <div class="form-group">
            <label for="txt_MQTT_Subscribe_Topic" class="col-sm-2 control-label">MQTT Topic (Subscribe):</label>
            <div class="col-sm-6">
                <input type="text" class="form-control" id="txt_MQTT_Subscribe_Topic" placeholder="Type MQTT Topic here...">
            </div>
            <div class="col-sm-4">
                <button type="button" class="btn btn-primary col-sm-4" onclick="mqtt_Subscribe_to_Topic();">Subscribe</button>
            </div>
        </div>
    </form>

    <hr>

    <form class="form-horizontal">

        <div class="form-group">
            <label class="col-sm-2 control-label" for="txt_MQTT_Publish_Topic">MQTT Topic (Publish):</label>
            <div class="col-sm-6">
                <input type="text" class="form-control" id="txt_MQTT_Publish_Topic" placeholder="Type MQTT Topic here...">
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label" for="txt_MQTT_Msg">MQTT Message:</label>
            <div class="col-sm-6">
                <input type="text" class="form-control" id="txt_MQTT_Msg" placeholder="Type MQTT Message here...">
            </div>
            <div class="col-sm-4">
                <button type="button" class="btn btn-primary col-sm-4" onclick="mqtt_Publish_Message();">Publish</button>
            </div>
        </div>
    </form>

    <hr>

    <form class="form-horizontal">
        <div class="form-group">
            <label class="col-sm-2 control-label" for="txtAr_Console">Console:</label>
            <div class="col-sm-9">
                <textarea ype="textarea" class="form-control" rows="12" cols="100" id="txtAr_Console"></textarea>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label" for="btn_Clear_Console"></label>
            <div class="col-sm-4">
                <button type="button" id="btn_Clear_Console" class="btn btn-warning col-sm-4" onclick="clear_Console();">Clear Console</button>
            </div>
        </div>
    </form>

</body>

</html>